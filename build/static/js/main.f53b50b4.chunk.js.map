{"version":3,"sources":["components/layout/Logo.tsx","components/layout/MadeBy.tsx","components/layout/Preloader.tsx","components/navbar/Burger.tsx","components/navbar/Links.tsx","components/navbar/Navbar.tsx","utils/p5/optimalPath.ts","utils/p5/sketch.ts","components/p5/P5.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Logo","className","href","onClick","event","preventDefault","MadeBy","target","rel","Preloader","id","src","alt","Navbar","active","setActive","role","aria-label","aria-expanded","data-target","map","bool","idx","key","aria-hidden","Links","clear","setClear","useState","Burger","optimalPath","start","end","a","p5","document","getElementById","cursor","style","axios","post","headers","body","JSON","stringify","data","console","error","sketch","p","img","x","y","path","paths","preload","loadImage","setup","width","height","pixels","pixelDensity","createCanvas","frameRate","image","loadPixels","d","push","Math","round","floor","draw","smooth","noFill","length","forEach","curPath","stroke","strokeWeight","beginShape","curveVertex","i","endShape","ellipse","noStroke","fill","mousePressed","mouseY","ceil","mouseX","myCustomRedrawAccordingToNewPropsHandler","P5","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.f53b50b4.chunk.js","sourcesContent":["// Imports\nimport React, { FunctionComponent } from 'react';\n\n// Component\nconst Logo: FunctionComponent = () => {\n  return (\n    <a\n      className=\"nav navbar-item navbar-logo text-style-bold\"\n      href=\"/\"\n      onClick={event => event.preventDefault()}\n    >\n      Deimosy\n    </a>\n  );\n};\n\n// Exports\nexport default Logo;\n","// Imports\nimport React, { FunctionComponent } from 'react';\n\n// Component\nconst MadeBy: FunctionComponent = () => {\n  return (\n    <div className=\"made-by text-align-center\">\n      <span>Made with ‚ù§ by </span>\n\n      <a\n        className=\"author-name text-style-bold\"\n        href=\"https://www.linkedin.com/in/tal-luigi\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        Tal Luigi\n      </a>\n    </div>\n  );\n};\n\n// Exports\nexport default MadeBy;\n","// Imports\nimport React, { FunctionComponent } from 'react';\n\n// Component\nconst Preloader: FunctionComponent = () => {\n  return (\n    <div id=\"p5_loading\" className=\"loadingclass\">\n      <img\n        src=\"./preloader.gif\"\n        alt=\"Preloader\"\n      />\n    </div>\n  );\n};\n\n// Exports\nexport default Preloader;\n","// Imports\nimport React, { FunctionComponent } from 'react';\n\nimport { BurgerProps } from '../../interfaces';\n\n// Component\nconst Navbar: FunctionComponent<BurgerProps> = ({ active, setActive }) => {\n  return (\n    <a\n      className={`navbar-burger burger ${active ? 'is-active' : ''}`}\n      href=\"/\"\n      role=\"button\"\n      aria-label=\"menu\"\n      aria-expanded=\"false\"\n      data-target=\"navbarBasicExample\"\n      onClick={event => {\n        event.preventDefault();\n        setActive(!active);\n      }}\n    >\n      {[true, true, true].map((bool, idx) => (\n        <span key={idx} aria-hidden={bool} />\n      ))}\n    </a>\n  );\n};\n\n// Exports\nexport default Navbar;\n","// Imports\nimport React, { FunctionComponent } from 'react';\n\nimport { LinksProps } from '../../interfaces';\n\n// Component\nconst Links: FunctionComponent<LinksProps> = ({\n  active,\n  setActive,\n  clear,\n  setClear,\n}) => {\n  return (\n    <div\n      id=\"navbarBasicExample\"\n      className={`navbar-menu ${active ? 'is-active' : ''}`}\n    >\n      <div className=\"navbar-end\">\n        <a\n          className=\"navbar-item text-style-bold\"\n          href=\"/\"\n          onClick={event => {\n            event.preventDefault();\n            setClear(!clear);\n            setActive(!active);\n          }}\n        >\n          Clear\n        </a>\n\n        <a\n          className=\"navbar-item text-style-bold\"\n          href=\"https://github.com/LuigiLegion/deimosy-fullstack\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          onClick={() => setActive(!active)}\n        >\n          Source\n        </a>\n\n        <a\n          className=\"navbar-item text-style-bold\"\n          href=\"https://taluigi.netlify.app\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          onClick={() => setActive(!active)}\n        >\n          Contact\n        </a>\n      </div>\n    </div>\n  );\n};\n\n// Exports\nexport default Links;\n","// Imports\nimport React, { useState, FunctionComponent } from 'react';\n\nimport { NavbarProps } from '../../interfaces';\nimport { Logo, Burger, Links } from '..';\n\n// Component\nconst Navbar: FunctionComponent<NavbarProps> = ({ clear, setClear }) => {\n  const [active, setActive] = useState(false);\n\n  return (\n    <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n      <div className=\"navbar-brand\">\n        <Logo />\n\n        <Burger active={active} setActive={setActive} />\n      </div>\n\n      <Links\n        active={active}\n        setActive={setActive}\n        clear={clear}\n        setClear={setClear}\n      />\n    </nav>\n  );\n};\n\n// Exports\nexport default Navbar;\n","// Imports\nimport axios from 'axios';\n\nimport { Coordinate } from '../../interfaces';\n\n// Initializations\nconst optimalPath = async (start: Coordinate, end: Coordinate) => {\n  const p5 = document.getElementById('p5') as HTMLInputElement;\n  const { cursor } = p5.style;\n\n  try {\n    p5.style.cursor = 'wait';\n\n    const { data }: { data: number[][] } = await axios.post(\n      process.env.NODE_ENV === 'production' ? '/api/paths' : 'http://localhost:5000/api/paths',\n      {\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ start, end }),\n      }\n    );\n\n    return data;\n  } catch (error) {\n    console.error(error);\n    return [];\n  } finally {\n    p5.style.cursor = cursor;\n  }\n};\n\n// Exports\nexport default optimalPath;\n","// Imports\nimport { P, Image, Coordinate } from '../../interfaces';\nimport { optimalPath } from '..';\n\n// Initializations\nconst sketch = (p: P) => {\n  let img: Image;\n  let start: Coordinate = { x: null, y: null };\n  let end: Coordinate = { x: null, y: null };\n  let path: number[][] = [];\n  let paths: number[][][] = [];\n\n  p.preload = async () => {\n    img = await p.loadImage('./images/0.png');\n  };\n\n  p.setup = () => {\n    const { width, height, pixels } = img;\n    const map: number[][] = [];\n\n    p.pixelDensity(1);\n    p.createCanvas(width, height);\n    p.frameRate(12);\n    p.image(img, 0, 0);\n\n    img.loadPixels();\n    p.loadPixels();\n\n    const d = p.pixelDensity();\n\n    for (let x = 0; x < width; x++) {\n      map.push([]);\n\n      for (let y = 0; y < height; y++) {\n        const idx = (Math.round(x * d) + Math.round(y * d) * width) * 4;\n        map[x].push(Math.floor(pixels[idx]));\n      }\n    }\n  };\n\n  p.draw = () => {\n    p.smooth();\n    p.noFill();\n\n    if (paths.length) {\n      paths.forEach(curPath => {\n        p.stroke(90, 180, 30);\n        p.strokeWeight(2);\n\n        p.beginShape();\n\n        p.curveVertex(curPath[0][0], curPath[0][1]);\n        for (let i = 1; i < curPath.length; i += 10) {\n          p.curveVertex(curPath[i][0], curPath[i][1]);\n        }\n        p.curveVertex(curPath[curPath.length - 1][0], curPath[curPath.length - 1][1]);\n\n        p.endShape();\n\n        p.strokeWeight(1);\n        p.ellipse(curPath[curPath.length - 1][0], curPath[curPath.length - 1][1], 20, 20);\n        p.strokeWeight(1);\n        p.ellipse(curPath[curPath.length - 1][0], curPath[curPath.length - 1][1], 30, 30);\n\n        start = end;\n        end = { x: null, y: null };\n        paths = [];\n      });\n    }\n\n    p.noStroke();\n    p.fill(90, 180, 30);\n\n    if (start.x && !end.x) {\n      p.ellipse(start.x, start.y, 10, 10);\n    } else if (start.x && end.x) {\n      p.ellipse(end.x, end.y, 10, 10);\n    }\n  };\n\n  p.mousePressed = async () => {\n    if (!start.x && !start.y && p.mouseY > 0) {\n      start.x = Math.ceil(p.mouseX);\n      start.y = Math.ceil(p.mouseY);\n    } else if (start.x && start.y && p.mouseY > 0) {\n      end.x = Math.ceil(p.mouseX);\n      end.y = Math.ceil(p.mouseY);\n\n      path = await optimalPath(start, end);\n\n      if (path) {\n        paths.push(path);\n      }\n    }\n  };\n\n  p.myCustomRedrawAccordingToNewPropsHandler = () => {\n    if (path.length) {\n      start.x = null;\n      start.y = null;\n      end.x = null;\n      end.y = null;\n      path = [];\n      paths = [];\n      p.image(img, 0, 0);\n    }\n  };\n};\n\n// Exports\nexport default sketch;\n","// Imports\nimport React, { FunctionComponent } from 'react';\nimport P5Wrapper from 'react-p5-wrapper';\n\nimport { P5Props } from '../../interfaces';\nimport { Preloader } from '..';\nimport { sketch } from '../../utils';\n\n// Component\nconst P5: FunctionComponent<P5Props> = ({ clear }) => {\n  return (\n    <div id=\"p5\">\n      <P5Wrapper sketch={sketch} clear={clear} />\n\n      <Preloader />\n    </div>\n  );\n};\n\n// Exports\nexport default P5;\n","// Imports\nimport React, { useState, FunctionComponent } from 'react';\n\nimport { Navbar, P5, MadeBy } from './components';\n\n// Component\nconst App: FunctionComponent = () => {\n  const [clear, setClear] = useState(false);\n\n  return (\n    <div className=\"App\">\n      <Navbar clear={clear} setClear={setClear} />\n\n      <P5 clear={clear} />\n\n      <MadeBy />\n    </div>\n  );\n};\n\n// Exports\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// Imports\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\n// Initializations\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}